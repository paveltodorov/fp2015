#lang racket
(define (cut-last-digit n)
  (remainder n 10))

(define (cut-number-from-last-digit n)
  (quotient n 10))
(define (product-digits n)
(define (product-digits-iter n res)
 ( cond
    [(zero? n) res]
    [else  (product-digits-iter (cut-number-from-last-digit n) (* res (cut-last-digit n)))]))
 (product-digits-iter n 1))
